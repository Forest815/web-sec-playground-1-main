// 更新後は
// npx prisma db push
// npx prisma generate
// ( >Developer: Reload Window ) 
// npx prisma db seed

// DBの確認は
// npx prisma studio
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                  String      @id @default(uuid())
  email               String      @unique
  password            String
  name                String
  role                Role        @default(USER)
  aboutSlug           String?     @map("about_slug") @unique
  aboutContent        String      @default("") 
  createdAt           DateTime    @default(now()) @map("created_at")
  updatedAt           DateTime    @updatedAt @map("updated_at")
  lastLoginAt         DateTime?   @map("last_login_at")
  isLocked            Boolean     @default(false) @map("is_locked")
  failedLoginAttempts Int         @default(0) @map("failed_login_attempts")
  lockedAt            DateTime?   @map("locked_at")
  secretQuestion      String?     @map("secret_question")
  secretAnswer        String?     @map("secret_answer")
  emailVerified       Boolean     @default(false) @map("email_verified")
  verificationToken   String?     @map("verification_token")

  sessions     Session[]
  loginHistory LoginHistory[]

  @@map("users")
}

model Session {
  id         String    @id @default(uuid())
  userId     String    @map("user_id")
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now()) @map("created_at")
  expiresAt  DateTime  @map("expires_at")
  ipAddress  String?   @map("ip_address")
  userAgent  String?   @map("user_agent")

  @@map("sessions")
}

model LoginHistory {
  id           String    @id @default(uuid())
  userId       String    @map("user_id")
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress    String    @map("ip_address")
  userAgent    String    @map("user_agent")
  success      Boolean
  createdAt    DateTime  @default(now()) @map("created_at")

  @@map("login_history")
  @@index([userId])
}

model StolenContent {
  id          String    @id @default(uuid())
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  @@map("stolen_contents")
}